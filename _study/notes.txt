arg 0 - ./philo 
arg 1 - number_of_philos
arg 2 - time_to_die
arg 3 - time_to_eat
arg 4 - time_to_sleep
arg 5 - number_of_meals

number_of_philos
The number of philosophers and also the number of forks.

time_to_die
(in milliseconds)
If a philosopher didnâ€™t start eating "time_to_die" since the ***BEGINNING*** of their last meal or the beginning of the simulation, they die.

time_to_eat
(in milliseconds)
The time it takes for a philosopher to eat. During that time, they will need to hold two forks.

time_to_sleep
(in milliseconds)
The time a philosopher will spend sleeping.

number_of_meals
If all philosophers have eaten at least "number_of_meals" times, the simulation stops. If not specified, the simulation stops when a philosopher dies.

>>> Each philosopher has a number ranging from 1 to number_of_philosophers.

>>> Any state change of a philosopher must be formatted as follows. Replace timestamp_in_ms with the current timestamp in milliseconds and X with the philosopher number.
- timestamp_in_ms X has taken a fork
- timestamp_in_ms X is eating
- timestamp_in_ms X is sleeping
- timestamp_in_ms X is thinking
- timestamp_in_ms X died

>>> A displayed state message should not be mixed up with another message.
>>> A message announcing a philosopher died should be displayed no more than 10 ms after the actual death of the philosopher.
